name: Update Image Tag

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to update'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - test
          - prod
      imageTag:
        description: 'Image tag to deploy'
        required: true
        type: string

jobs:
  update-image:
    name: Update Image Tag in ArgoCD
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup ArgoCD CLI
        run: |
          curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
          rm argocd-linux-amd64
          
      - name: Login to ArgoCD
        run: |
          argocd login ${{ secrets.ARGOCD_SERVER }} --username ${{ secrets.ARGOCD_USERNAME }} --password ${{ secrets.ARGOCD_PASSWORD }} --insecure
          
      - name: Update Image Tag
        run: |
          echo "Updating image tag for ${{ github.event.inputs.environment }} to ${{ github.event.inputs.imageTag }}..."
          argocd app set arcade-game-${{ github.event.inputs.environment }} -p image.tag=${{ github.event.inputs.imageTag }}
          
      - name: Sync Application
        run: |
          echo "Syncing application..."
          argocd app sync arcade-game-${{ github.event.inputs.environment }}
          argocd app wait arcade-game-${{ github.event.inputs.environment }} --health
          
      - name: Verify Deployment
        run: |
          kubectl config use-context gke_${{ vars.GCP_PROJECT_ID }}_${{ vars.GKE_REGION }}_arcade-game-${{ github.event.inputs.environment }}
          kubectl get deployment -n arcade-game-${{ github.event.inputs.environment }} -o jsonpath="{.items[0].spec.template.spec.containers[0].image}"
          
      - name: Post Update Notification
        if: success()
        uses: slackapi/slack-github-action@v1
        with:
          payload: |
            {
              "text": "âœ… Successfully updated HTML5 Arcade Game image to ${{ github.event.inputs.imageTag }} in ${{ github.event.inputs.environment }} environment."
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}